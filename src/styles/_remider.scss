// syntax
.selector-a {
    float: left;
}
.selector-a,
.selector-b {
    background: orange;
}

.selector- {
    &a {
        float: left;
    }
    &a,
    &b {
        background: orange;
    }
}

// variables
$brandBlue: #416e8e;
body {
    background: $brandBlue;
}

// mixin include
.selector-a {
    @include genericContainer;
}

$brandBlue: #416e8e;
$supportGray: #ccc;

// mixin
@mixin genericContainer {
    padding: 10px;
    border: $brandBlue 1px solid;
    background: $supportGray;
    box-shadow: 1px 1px 1px rgba($brandBlue, 0.3);
}

@mixin genericContainer($padding) {
    padding: $padding;
    border: $brandBlue 1px solid;
    background: $supportGray;
    box-shadow: 1px 1px 1px rgba(black, 0.3);
}

// arguments
@mixin genericContainer($padding, $bdColor, $bgColor, $boxShdColor) {
    padding: $padding;
    border: $bdColor 1px solid;
    background: $bgColor;
    box-shadow: 1px 1px 1px $boxShdColor;
}

.selector-a {
    @include genericContainer(2%, $brandBlue, #ccc, black);
}

// default values
@mixin genericContainer(
    $padding: 5px,
    $bdColor: orange,
    $bgColor: #999,
    $boxShdColor: #333
) {
    padding: $padding;
    border: $bdColor 1px solid;
    background: $bgColor;
    box-shadow: 1px 1px 1px $boxShdColor;
}

// nesting
$brandBlue: #416e8e;
nav {
    ul {
        display: flex;
        margin: 0;
        padding: 0;
        list-style: none;
    }
    li {
        margin: 5px;
        background: #000;
    }
    a {
        display: block;
        padding: 5px 15px;
        text-decoration: none;
        color: $brandBlue;
    }
}

// import
@import 'variables';

//  extend

$brandBlue: #416e8e;
.generic-container {
    padding: 10px;
    border: $brandBlue 1px solid;
    background: #ccc;
    box-shadow: 1px 1px 1px rgba(black, 0.3);
}

.box-customer-service {
    @extend .generic-container;
    padding: 25px;
}

// comments
/* This is a traditional CSS comment included in outlut file */

// media queries example
//Mobile-first
@mixin minw($point) {
    @if $point == 320 {
        @media (min-width: 20em) {
            @content;
        }
    } @else if $point == 640 {
        @media (min-width: 40em) {
            @content;
        }
    } @else if $point == 768 {
        @media (min-width: 47.5em) {
            @content;
        }
    }
}

header {
    width: 50%; //Properties for small screens
    background: red;
    @include minw(640) {
        width: 100%; //Properties for large screens
        background: blue;
    }
}
// Named media queries
//Mobile-first
@mixin breakpoint($point) {
    @if $point == small {
        @media (min-width: 20em) {
            @content;
        }
    } @else if $point == medium {
        @media (min-width: 40em) {
            @content;
        }
    } @else if $point == large {
        @media (min-width: 48em) {
            @content;
        }
    }
}

header {
    width: 50%; //Properties for small screens
    background: red;
    @include breakpoint(medium) {
        width: 100%; //Properties for large screens
        background: blue;
    }
}

// basic
@mixin mobileFirst($media) {
    @media (min-width: $media) {
        @content;
    }
}

header {
    width: 50%; //Properties for small screens
    background: red;
    @include mobileFirst(640) {
        width: 100%; //Properties for large screens
        background: blue;
    }
}
